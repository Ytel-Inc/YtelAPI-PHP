<?php
/*
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace YtelAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class Body71 implements JsonSerializable
{
    /**
     * A valid comma(,) separated Ytel numbers. (E.164 format).
     * @required
     * @maps PhoneNumber
     * @var string $phoneNumber public property
     */
    public $phoneNumber;

    /**
     * The URL returning InboundXML incoming calls should execute when connected.
     * @required
     * @maps VoiceUrl
     * @var string $voiceUrl public property
     */
    public $voiceUrl;

    /**
     * A human-readable value for labeling the number.
     * @maps FriendlyName
     * @var string|null $friendlyName public property
     */
    public $friendlyName;

    /**
     * Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
     * @maps VoiceMethod
     * @var string|null $voiceMethod public property
     */
    public $voiceMethod;

    /**
     * URL used if any errors occur during execution of InboundXML on a call or at initial request of the
     * voice url
     * @maps VoiceFallbackUrl
     * @var string|null $voiceFallbackUrl public property
     */
    public $voiceFallbackUrl;

    /**
     * Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
     * @maps VoiceFallbackMethod
     * @var string|null $voiceFallbackMethod public property
     */
    public $voiceFallbackMethod;

    /**
     * URL that can be requested to receive notification when and how incoming call has ended.
     * @maps HangupCallback
     * @var string|null $hangupCallback public property
     */
    public $hangupCallback;

    /**
     * The HTTP method Ytel will use when requesting the HangupCallback URL.
     * @maps HangupCallbackMethod
     * @var string|null $hangupCallbackMethod public property
     */
    public $hangupCallbackMethod;

    /**
     * URL that can be used to monitor the phone number.
     * @maps HeartbeatUrl
     * @var string|null $heartbeatUrl public property
     */
    public $heartbeatUrl;

    /**
     * The HTTP method Ytel will use when requesting the HeartbeatUrl.
     * @maps HeartbeatMethod
     * @var string|null $heartbeatMethod public property
     */
    public $heartbeatMethod;

    /**
     * URL requested when an SMS is received.
     * @maps SmsUrl
     * @var string|null $smsUrl public property
     */
    public $smsUrl;

    /**
     * The HTTP method Ytel will use when requesting the SmsUrl.
     * @maps SmsMethod
     * @var string|null $smsMethod public property
     */
    public $smsMethod;

    /**
     * URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the
     * SmsUrl.
     * @maps SmsFallbackUrl
     * @var string|null $smsFallbackUrl public property
     */
    public $smsFallbackUrl;

    /**
     * The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
     * @maps SmsFallbackMethod
     * @var string|null $smsFallbackMethod public property
     */
    public $smsFallbackMethod;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $phoneNumber          Initialization value for $this->phoneNumber
     * @param string $voiceUrl             Initialization value for $this->voiceUrl
     * @param string $friendlyName         Initialization value for $this->friendlyName
     * @param string $voiceMethod          Initialization value for $this->voiceMethod
     * @param string $voiceFallbackUrl     Initialization value for $this->voiceFallbackUrl
     * @param string $voiceFallbackMethod  Initialization value for $this->voiceFallbackMethod
     * @param string $hangupCallback       Initialization value for $this->hangupCallback
     * @param string $hangupCallbackMethod Initialization value for $this->hangupCallbackMethod
     * @param string $heartbeatUrl         Initialization value for $this->heartbeatUrl
     * @param string $heartbeatMethod      Initialization value for $this->heartbeatMethod
     * @param string $smsUrl               Initialization value for $this->smsUrl
     * @param string $smsMethod            Initialization value for $this->smsMethod
     * @param string $smsFallbackUrl       Initialization value for $this->smsFallbackUrl
     * @param string $smsFallbackMethod    Initialization value for $this->smsFallbackMethod
     */
    public function __construct()
    {
        if (14 == func_num_args()) {
            $this->phoneNumber          = func_get_arg(0);
            $this->voiceUrl             = func_get_arg(1);
            $this->friendlyName         = func_get_arg(2);
            $this->voiceMethod          = func_get_arg(3);
            $this->voiceFallbackUrl     = func_get_arg(4);
            $this->voiceFallbackMethod  = func_get_arg(5);
            $this->hangupCallback       = func_get_arg(6);
            $this->hangupCallbackMethod = func_get_arg(7);
            $this->heartbeatUrl         = func_get_arg(8);
            $this->heartbeatMethod      = func_get_arg(9);
            $this->smsUrl               = func_get_arg(10);
            $this->smsMethod            = func_get_arg(11);
            $this->smsFallbackUrl       = func_get_arg(12);
            $this->smsFallbackMethod    = func_get_arg(13);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['PhoneNumber']          = $this->phoneNumber;
        $json['VoiceUrl']             = $this->voiceUrl;
        $json['FriendlyName']         = $this->friendlyName;
        $json['VoiceMethod']          = $this->voiceMethod;
        $json['VoiceFallbackUrl']     = $this->voiceFallbackUrl;
        $json['VoiceFallbackMethod']  = $this->voiceFallbackMethod;
        $json['HangupCallback']       = $this->hangupCallback;
        $json['HangupCallbackMethod'] = $this->hangupCallbackMethod;
        $json['HeartbeatUrl']         = $this->heartbeatUrl;
        $json['HeartbeatMethod']      = $this->heartbeatMethod;
        $json['SmsUrl']               = $this->smsUrl;
        $json['SmsMethod']            = $this->smsMethod;
        $json['SmsFallbackUrl']       = $this->smsFallbackUrl;
        $json['SmsFallbackMethod']    = $this->smsFallbackMethod;

        return $json;
    }
}
